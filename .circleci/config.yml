defaults: &defaults
  working_directory: /tmp/image_build
  docker:
    - image: mumblepins/docker-on-debian-circleci
      environment:
        DOCKER_IMAGE: "mumblepins/syslog-ng-alpine"

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Init Environment
          command: init-environment
      - run:
          name: Build Docker Image
          command: |
            set -ex
            docker build \
              --build-arg BUILD_DATE="${BUILD_DATE}" \
              --build-arg VERSION="${VERSION}" \
              --build-arg VCS_URL="${GIT_URL}" \
              --build-arg VCS_REF="${GIT_COMMIT}" \
              -t ${DOCKER_IMAGE}:${VERSION} .
      - run:
          name: Save Docker Image to Workspace
          command: |
            set -ex
            mkdir -p workspace
            time (docker save ${DOCKER_IMAGE}:${VERSION} | lz4 -zc > workspace/image.tar.lz4)
            cat $BASH_ENV > workspace/BASH_ENV_SAVE
      - persist_to_workspace:
          root: workspace
          paths:
            - image.tar.lz4
            - BASH_ENV_SAVE
      - store_artifacts:
          path: workspace

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace
      - setup_remote_docker
      - run:
          name: Init Environment
          command: set -ex; cat workspace/BASH_ENV_SAVE >> $BASH_ENV
      - run:
          name: Check Version Tag
          command: |
            set -ex
            # Make sure that we have a clean tag
            if [[ "$VERSION" == *-* ]]; then echo "Something went wrong, we have a dash in our Version tag"; exit 1; fi
      - run:
          name: Docker Image Load
          command: |
            set -ex
            time (lz4 -cd workspace/image.tar.lz4 | docker load)
      - deploy:
          name: Docker Hub Deploy
          command : |
            set -ex
            echo $PWD
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag ${DOCKER_IMAGE}:${VERSION} ${DOCKER_IMAGE}:latest
            docker push ${DOCKER_IMAGE}:${VERSION}
            docker push ${DOCKER_IMAGE}:latest

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace
      - setup_remote_docker
      - run:
          name: Init Environment
          command: set -ex; cat workspace/BASH_ENV_SAVE >> $BASH_ENV
      - run:
          name: Docker Image Load
          command: |
            set -ex
            time (lz4 -cd workspace/image.tar.lz4 | docker load)
      - run:
          name: Docker Test
          command : |
            set -ex
            docker run -d -p 514:514/udp --name syslog-ng ${DOCKER_IMAGE}:${VERSION}
            IP_CONTAINER=$( docker inspect syslog-ng | jq -r '.[0].NetworkSettings.IPAddress' )
            for i in {auth,authpriv,cron,daemon,kern,lpr,mail,mark,news,syslog,user,uucp,local0,local1,local2,local3,local4,local5,local6,local7}; do
            for k in {debug,info,notice,warning,err,crit,alert,emerg}; do
            logger -p $i.$k -n $IP_CONTAINER --id=31415 -t "TESTMSG" "Test daemon message, facility $i priority $k"
            done
            done
            docker cp syslog-ng:/var/log/syslog-ng workspace/syslog
            docker stop syslog-ng
      - store_artifacts:
          path: workspace


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^[0-9.]+$/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9.]+$/
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9.]+$/


